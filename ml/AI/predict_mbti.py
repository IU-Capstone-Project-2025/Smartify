import json

# –°–ª–æ–≤–∞—Ä—å –æ–ø–∏—Å–∞–Ω–∏–π MBTI-—Ç–∏–ø–æ–≤ (–¥–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏)
MBTI_DESCRIPTIONS = {
    "INTJ": {
        "name": "–°—Ç—Ä–∞—Ç–µ–≥",
        "description": "–ù–æ–≤–∞—Ç–æ—Ä-–ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç, –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ. –£–≤–µ—Ä–µ–Ω –≤ —Å–≤–æ–∏—Ö –∏–¥–µ—è—Ö, –ª–æ–≥–∏—á–µ–Ω –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω. –ß–∞—Å—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏: —Å—Ç—Ä–∞—Ç–µ–≥, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å, –∏–Ω–∂–µ–Ω–µ—Ä, –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä, –∞–Ω–∞–ª–∏—Ç–∏–∫.",
        "example": "–ì–µ–Ω–¥–∞–ª—å—Ñ –°–µ—Ä—ã–π (–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü)"
    },
    "INTP": {
        "name": "–£—á—ë–Ω—ã–π",
        "description": "–ê–Ω–∞–ª–∏—Ç–∏—á–Ω—ã–π, –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π, —Å–∫–ª–æ–Ω–µ–Ω –∫ —Ç–µ–æ—Ä–µ—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–∏—é. –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Ä–µ—à–∞–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–π: –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –º–∞—Ç–µ–º–∞—Ç–∏–∫, —É—á—ë–Ω—ã–π, –∏–Ω–∂–µ–Ω–µ—Ä, –∞–Ω–∞–ª–∏—Ç–∏–∫.",
        "example": "–ê–ª—å–±–µ—Ä—Ç –≠–π–Ω—à—Ç–µ–π–Ω"
    },
    "ENTP": {
        "name": "–ü–æ–ª–µ–º–∏—Å—Ç",
        "description": "–•–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω—ã–π –∏ –Ω–∞—Ö–æ–¥—á–∏–≤—ã–π –º—ã—Å–ª–∏—Ç–µ–ª—å. –õ—é–±–∏—Ç —Å–ø–æ—Ä–∏—Ç—å, —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∏–¥–µ–∏ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–π: –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å, –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥, —Å—Ç–∞—Ä—Ç–∞–ø–µ—Ä, —é—Ä–∏—Å—Ç, –ø–æ–ª–∏—Ç—Ç–µ—Ö–Ω–æ–ª–æ–≥.",
        "example": "–¢–∏—Ä–∏–æ–Ω –õ–∞–Ω–Ω–∏—Å—Ç–µ—Ä"
    },
    "ENTJ": {
        "name": "–ö–æ–º–∞–Ω–¥–∏—Ä",
        "description": "–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω—ã–π –ª–∏–¥–µ—Ä, —Ä–∞—Ü–∏–æ–Ω–∞–ª–µ–Ω –∏ –Ω–∞–ø–æ—Ä–∏—Å—Ç. –û—Ä–≥–∞–Ω–∏–∑—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∏ –¥–æ–±–∏–≤–∞–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞. –ß–∞—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç: —É–ø—Ä–∞–≤–ª—è—é—â–∏–º, —Ç–æ–ø-–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º, —é—Ä–∏—Å—Ç–æ–º, –≤–æ–µ–Ω–Ω—ã–º, —Å—Ç—Ä–∞—Ç–µ–≥–æ–º.",
        "example": "–°—Ç–∏–≤ –î–∂–æ–±—Å"
    },

    ### üé® –ò–¥–µ–∞–ª–∏—Å—Ç—ã (–î–∏–ø–ª–æ–º–∞—Ç—ã)
    "INFJ": {
        "name": "–ê–∫—Ç–∏–≤–∏—Å—Ç",
        "description": "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç —Å —Ä–∞–∑–≤–∏—Ç–æ–π –∏–Ω—Ç—É–∏—Ü–∏–µ–π, –≥–ª—É–±–æ–∫–æ –ø–æ–Ω–∏–º–∞—é—â–∏–π –¥—Ä—É–≥–∏—Ö. –¶–µ–Ω–∏—Ç –º–æ—Ä–∞–ª—å, —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏. –ü–æ–¥—Ö–æ–¥–∏—Ç: –ø—Å–∏—Ö–æ–ª–æ–≥, –ø–∏—Å–∞—Ç–µ–ª—å, –ø–µ–¥–∞–≥–æ–≥, –∫–æ—É—á, –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å.",
        "example": "–ú–∞—Ä—Ç–∏–Ω –õ—é—Ç–µ—Ä –ö–∏–Ω–≥"
    },
    "INFP": {
        "name": "–ü–æ—Å—Ä–µ–¥–Ω–∏–∫",
        "description": "–ú–µ—á—Ç–∞—Ç–µ–ª—å–Ω—ã–π, —Å–ø–æ–∫–æ–π–Ω—ã–π, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Å–º—ã—Å–ª—ã. –¢–≤–æ—Ä—á–µ—Å–∫–∞—è –¥—É—à–∞, —Å–∫–ª–æ–Ω–µ–Ω –∫ –ø–æ–º–æ—â–∏ –¥—Ä—É–≥–∏–º. –ü–æ–¥—Ö–æ–¥–∏—Ç: –ø–∏—Å–∞—Ç–µ–ª—å, —Ö—É–¥–æ–∂–Ω–∏–∫, –∞—Ä—Ç-–¥–∏—Ä–µ–∫—Ç–æ—Ä, –ø–µ–¥–∞–≥–æ–≥, —Ñ–∏–ª–æ—Å–æ—Ñ.",
        "example": "–ê–º–µ–ª–∏ –ü—É–ª–µ–Ω"
    },
    "ENFP": {
        "name": "–ë–æ—Ä–µ—Ü",
        "description": "–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —ç–Ω—Ç—É–∑–∏–∞—Å—Ç —Å —è—Ä–∫–∏–º –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º. –õ—é–±–∏—Ç –∫—Ä–µ–∞—Ç–∏–≤ –∏ —Å–≤–æ–±–æ–¥—É, –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –¥—Ä—É–≥–∏—Ö. –ß–∞—Å—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è: —Ä–µ–∂–∏—Å—Å—ë—Ä–æ–º, –¥–∏–∑–∞–π–Ω–µ—Ä–æ–º, –∂—É—Ä–Ω–∞–ª–∏—Å—Ç–æ–º, –∫–æ—É—á–µ–º, –ø–µ–¥–∞–≥–æ–≥–æ–º.",
        "example": "–ö–≤–µ–Ω—Ç–∏–Ω –¢–∞—Ä–∞–Ω—Ç–∏–Ω–æ"
    },
    "ENFJ": {
        "name": "–¢—Ä–µ–Ω–µ—Ä",
        "description": "–•–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω—ã–π, –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –ª–∏–¥–µ—Ä, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –¥—Ä—É–≥–∏—Ö. –û—Ç–ª–∏—á–Ω—ã–π –º–æ—Ç–∏–≤–∞—Ç–æ—Ä –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–æ—Ä. –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏: –æ—Ä–∞—Ç–æ—Ä, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, HR, –ø—Å–∏—Ö–æ–ª–æ–≥, –ø–æ–ª–∏—Ç–∏–∫.",
        "example": "–û–ø—Ä–∞ –£–∏–Ω—Ñ—Ä–∏"
    },

    ### üõ° –•—Ä–∞–Ω–∏—Ç–µ–ª–∏ (–°–µ–Ω—Å–æ—Ä–Ω–æ-–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∞–ª–∏—Å—Ç—ã)
    "ISTJ": {
        "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
        "description": "–ù–∞–¥—ë–∂–Ω—ã–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π. –¶–µ–Ω–∏—Ç –ø–æ—Ä—è–¥–æ–∫ –∏ –ø—Ä–∞–≤–∏–ª–∞. –ü–æ–¥—Ö–æ–¥–∏—Ç: –±—É—Ö–≥–∞–ª—Ç–µ—Ä, —é—Ä–∏—Å—Ç, –≤–æ–µ–Ω–Ω—ã–π, –∞—Ä—Ö–∏–≤–∞—Ä–∏—É—Å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.",
        "example": "–î–∂–æ—Ä–¥–∂ –í–∞—à–∏–Ω–≥—Ç–æ–Ω"
    },
    "ISFJ": {
        "name": "–ó–∞—â–∏—Ç–Ω–∏–∫",
        "description": "–°–æ—á–µ—Ç–∞–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –ª—é–¥—è–º –∏ –¥–æ–ª–≥—É. –ü—Ä–µ–¥–∞–Ω–Ω—ã–π –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π. –ß–∞—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç: –º–µ–¥—Å–µ—Å—Ç—Ä–æ–π, —É—á–∏—Ç–µ–ª–µ–º, –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º, HR-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º, –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä–µ–º.",
        "example": "–ï–ª–∏–∑–∞–≤–µ—Ç–∞ II"
    },
    "ESTJ": {
        "name": "–ú–µ–Ω–µ–¥–∂–µ—Ä",
        "description": "–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π. –õ—é–±–∏—Ç —á—ë—Ç–∫–æ—Å—Ç—å –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É. –†—É–∫–æ–≤–æ–¥–∏—Ç —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é. –ü–æ–¥—Ö–æ–¥–∏—Ç: —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –≤–æ–µ–Ω–Ω—ã–π, —Ñ–∏–Ω–∞–Ω—Å–∏—Å—Ç.",
        "example": "–î—É–∞–π—Ç –®—Ä—É—Ç (–û—Ñ–∏—Å)"
    },
    "ESFJ": {
        "name": "–ö–æ–Ω—Å—É–ª",
        "description": "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–π, –æ—Ç–ª–∏—á–Ω—ã–π –∫–æ–º–∞–Ω–¥–Ω—ã–π –∏–≥—Ä–æ–∫. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –ª–∏—á–Ω—ã–µ —Å–≤—è–∑–∏ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å. –ß–∞—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç: –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –ø—Ä–æ–¥–∞–≤–µ—Ü, –ø–µ–¥–∞–≥–æ–≥, –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç.",
        "example": "–ú–æ–Ω–∏–∫–∞ –ì–µ–ª–ª–µ—Ä (–î—Ä—É–∑—å—è)"
    },

    ### üéØ –ò—Å–∫–∞—Ç–µ–ª–∏ (–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–µ —Ä–µ–∞–ª–∏—Å—Ç—ã)
    "ISTP": {
        "name": "–í–∏—Ä—Ç—É–æ–∑",
        "description": "–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∏ –∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å–Ω—ã–π. –û—Ç–ª–∏—á–Ω–æ —Ä–µ—à–∞–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏. –õ—é–±–∏—Ç —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã. –ü–æ–¥—Ö–æ–¥–∏—Ç: –∏–Ω–∂–µ–Ω–µ—Ä, –º–µ—Ö–∞–Ω–∏–∫, –∞–π—Ç–∏—à–Ω–∏–∫, –ø–∏–ª–æ—Ç, –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä.",
        "example": "–î–∂–µ–π–º—Å –ë–æ–Ω–¥"
    },
    "ISFP": {
        "name": "–ê—Ä—Ç–∏—Å—Ç",
        "description": "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π. –¢–≤–æ—Ä—á–µ—Å–∫–∏ —Å–∞–º–æ–≤—ã—Ä–∞–∂–∞–µ—Ç—Å—è –∏ –ø–æ–º–æ–≥–∞–µ—Ç –¥—Ä—É–≥–∏–º. –ß–∞—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç: –¥–∏–∑–∞–π–Ω–µ—Ä, –º–µ–¥–∏–∫, –ø–µ–¥–∞–≥–æ–≥, —Ö—É–¥–æ–∂–Ω–∏–∫, —Ñ–ª–æ—Ä–∏—Å—Ç.",
        "example": "–§—Ä–∏–¥–∞ –ö–∞–ª–æ"
    },
    "ESTP": {
        "name": "–î–µ–ª–µ—Ü",
        "description": "–û–±–æ–∂–∞–µ—Ç —ç–∫—Å—Ç—Ä–∏–º –∏ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Ö–æ–¥—É. –õ—é–±–∏—Ç –¥–∏–Ω–∞–º–∏–∫—É. –ß–∞—Å—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç: –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ, —Å–ø–æ—Ä—Ç, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –ø—Ä–æ–¥–∞–∂–∏, –∞–≤–∞—Ä–∏–π–Ω—ã–µ —Å–ª—É–∂–±—ã.",
        "example": "–¥‚Äô–ê—Ä—Ç–∞–Ω—å—è–Ω"
    },
    "ESFP": {
        "name": "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å",
        "description": "–û—Ç–∫—Ä—ã—Ç—ã–π, –∞—Ä—Ç–∏—Å—Ç–∏—á–Ω—ã–π –∏ –≤–µ—Å—ë–ª—ã–π. –û–±–æ–∂–∞–µ—Ç –ø—É–±–ª–∏–∫—É –∏ –∂–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–π: –∞–∫—Ç—ë—Ä, –º—É–∑—ã–∫–∞–Ω—Ç, –≤–µ–¥—É—â–∏–π, PR-–º–µ–Ω–µ–¥–∂–µ—Ä, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å.",
        "example": "–≠–ª—Ç–æ–Ω –î–∂–æ–Ω"
    }
}


def determine_mbti(mbti_scores):
    def invert(score): return 8 - score
    direct_ei = {11, 12, 19, 28}
    scales = {
        'EI': [11, 12, 14, 19, 28],
        'SN': [26, 31, 32, 34],
        'TF': [13, 17, 18, 24, 27],
        'JP': [15, 20, 22, 25, 33]
    }

    ei = [invert(mbti_scores[f'q{i}']) if i not in direct_ei else mbti_scores[f'q{i}'] for i in scales['EI']]
    sn = [mbti_scores[f'q{i}'] for i in scales['SN']]
    tf = [mbti_scores[f'q{i}'] for i in scales['TF']]
    jp = [mbti_scores[f'q{i}'] for i in scales['JP']]

    mbti = ''
    mbti += 'I' if sum(ei) / len(ei) >= 4 else 'E'
    mbti += 'N' if sum(sn) / len(sn) >= 4 else 'S'
    mbti += 'F' if sum(tf) / len(tf) >= 4 else 'T'
    mbti += 'J' if sum(jp) / len(jp) >= 4 else 'P'

    return mbti

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
with open('database/dataset_career_test.json', encoding='utf-8') as f:
    data = json.load(f)

updated_data = []

for entry in data:
    mbti_scores = entry.get("mbti_scores", {})
    mbti_type = determine_mbti(mbti_scores)
    description = MBTI_DESCRIPTIONS.get(mbti_type, {
        "name": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø",
        "description": "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.",
        "example": "-"
    })

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    new_entry = entry.copy()
    new_entry["mbti_type"] = {
        "code": mbti_type,
        "name": description["name"],
        "description": description["description"],
        "example": description["example"]
    }

    # –£–¥–∞–ª—è–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    if "mbti_scores" in new_entry:
        del new_entry["mbti_scores"]

    updated_data.append(new_entry)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é –±–∞–∑—É
output_file = "database/dataset_with_mbti_descriptions.json"
with open(output_file, "w", encoding="utf-8") as f:
    json.dump(updated_data, f, ensure_ascii=False, indent=2)

print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –ù–æ–≤–∞—è –±–∞–∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {output_file}")
