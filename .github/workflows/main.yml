name: Smartify CI/CD

#Hi
on:
  push:
    branches:
      - Back
  pull_request:
    branches:
      - Back

jobs:
  test:
    runs-on: [self-hosted]

    env:
      URI: http://localhost:22025/api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: |
          docker-compose build &&
          docker-compose up -d

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for backend to be healthy..."
          for i in {1..60}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${URI}/hello)
            if [ "$STATUS" -eq 200 ]; then
              echo "✅ Backend is up!"
              exit 0
            fi
            echo "Waiting... ($i)"
            sleep 2
          done
          echo "❌ Backend did not start"
          docker-compose logs
          exit 1

      - name: Run integration tests
        run: |
          chmod +x backend/tests/login_test.sh
          backend/tests/login_test.sh

      - name: Stop containers
        if: always()
        run: |
          docker-compose down
        


  build_and_deploy:
    needs: build_and_test
    runs-on: [self-hosted]

    env:
      REMOTE_HOST: 213.226.112.206
      REMOTE_USER: ghrunner
      APP_DIR: /pro/smartify

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH client
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts

      - name: Copy application files to remote server
        run: |
          ssh $REMOTE_USER@$REMOTE_HOST "mkdir -p ${APP_DIR}"

          scp -r docker-compose.yml $REMOTE_USER@$REMOTE_HOST:${APP_DIR}
          scp -r backend/ $REMOTE_USER@$REMOTE_HOST:${APP_DIR}
          scp -r database/ $REMOTE_USER@$REMOTE_HOST:${APP_DIR}
          scp -r ml/ $REMOTE_USER@$REMOTE_HOST:${APP_DIR}
          scp -r frontend/ $REMOTE_USER@$REMOTE_HOST:${APP_DIR}

      - name: Build and deploy Docker containers on remote server
        run: |
          ssh $REMOTE_USER@$REMOTE_HOST "
            cd ${APP_DIR} &&
            docker-compose build &&
            docker-compose up -d
          "
          echo "Deployment completed on $REMOTE_HOST"

      - name: Clean up SSH key
        if: always()
        run: rm -f ~/.ssh/id_rsa